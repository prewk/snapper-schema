{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Master schema for Snapper schemas",
  "type": "array",
  "items": {
    "type": "object",
    "oneOf": [
      { "$ref": "#/definitions/entity" }
    ]
  },
  "definitions": {
    "entity": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "morphAs", "key", "fields"],
      "properties": {
        "type": { "enum": ["ENTITY"] },
        "name": { "type": "string" },
        "morphAs": { "type": "string" },
        "key": {
          "type": "object",
          "oneOf": [{ "$ref": "#/definitions/primaryKeyField" }]
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              { "$ref": "#/definitions/valueField" },
              { "$ref": "#/definitions/belongsToField" },
              { "$ref": "#/definitions/morphedByField" },
              { "$ref": "#/definitions/morphToField" },
              { "$ref": "#/definitions/hasManyField" },
              { "$ref": "#/definitions/mapField" },
              { "$ref": "#/definitions/matchField" }
            ]
          }
        }
      }
    },
    "primaryKeyField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name"],
      "properties": {
        "type": { "enum": ["PRIMARY_KEY"] },
        "name": { "type": "string" }
      }
    },
    "valueField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "cast", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["VALUE"] },
        "name": { "type": "string" },
        "cast": { "enum": ["NONE", "JSON", "INTEGER", "FLOAT"] },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {}
      }
    },
    "belongsToField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "foreignEntity", "localKey", "relationCondition", "conditionMatcher", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["BELONGS_TO"] },
        "name": { "type": "string" },
        "foreignEntity": { "type": "string" },
        "localKey": { "type": "string" },
        "relationCondition": { "enum": ["NON_ZERO_INT", "REGEXP", "NONE"] },
        "conditionMatcher": { "type": "string" },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {}
      }
    },
    "morphedByField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "foreignEntity", "foreignKey", "foreignType", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["MORPHED_BY"] },
        "name": { "type": "string" },
        "foreignEntity": { "type": "string" },
        "foreignKey": { "type": "string" },
        "foreignType": { "type": "string" },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {}
      }
    },
    "morphToField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "idField", "typeField", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["MORPH_TO"] },
        "name": { "type": "string" },
        "idField": { "type": "string" },
        "typeField": { "type": "string" },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {},
        "typeCircularFallback": {}
      }
    },
    "hasManyField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "foreignEntity", "foreignKey", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["HAS_MANY"] },
        "name": { "type": "string" },
        "foreignEntity": { "type": "string" },
        "foreignKey": { "type": "string" },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {}
      }
    },
    "mapField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "cast", "greedy", "relations", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["MAP"] },
        "name": { "type": "string" },
        "cast": { "enum": ["JSON"] },
        "greedy": { "type": "boolean" },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              { "$ref": "#/definitions/valueRelationEntry" },
              { "$ref": "#/definitions/listRelationEntry" },
              { "$ref": "#/definitions/regExpRelationEntry" }
            ]
          }
        },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {}
      }
    },
    "matchField": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "name", "default", "cases", "optional", "fallback", "circularFallback"],
      "properties": {
        "type": { "enum": ["MATCH"] },
        "name": { "type": "string" },
        "default": {
          "type": "object",
          "oneOf": [
            { "$ref": "#/definitions/valueField" },
            { "$ref": "#/definitions/belongsToField" },
            { "$ref": "#/definitions/morphedByField" },
            { "$ref": "#/definitions/morphToField" },
            { "$ref": "#/definitions/hasManyField" },
            { "$ref": "#/definitions/mapField" },
            { "$ref": "#/definitions/matchField" }
          ]
        },
        "cases": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {},
              {
                "type": "object",
                "oneOf": [
                  { "$ref": "#/definitions/valueField" },
                  { "$ref": "#/definitions/belongsToField" },
                  { "$ref": "#/definitions/morphedByField" },
                  { "$ref": "#/definitions/morphToField" },
                  { "$ref": "#/definitions/hasManyField" },
                  { "$ref": "#/definitions/mapField" },
                  { "$ref": "#/definitions/matchField" }
                ]
              }
            ]
          }
        },
        "optional": { "type": "boolean" },
        "fallback": {},
        "circularFallback": {}
      }
    },
    "valueRelationEntry": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "path", "relation", "relationCondition", "conditionMatcher"],
      "properties": {
        "type": { "enum": ["VALUE_RELATION_ENTRY"] },
        "path": { "type": "string" },
        "relationCondition": { "enum": ["NON_ZERO_INT", "REGEXP", "NONE"] },
        "conditionMatcher": { "type": "string" },
        "relation": { "type": "string" }
      }
    },
    "listRelationEntry": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "path", "relation", "relationCondition", "conditionMatcher"],
      "properties": {
        "type": { "enum": ["LIST_RELATION_ENTRY"] },
        "path": { "type": "string" },
        "relationCondition": { "enum": ["NON_ZERO_INT", "REGEXP", "NONE"] },
        "conditionMatcher": { "type": "string" },
        "relation": { "type": "string" }
      }
    },
    "regExpRelationEntry": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "path", "matchers"],
      "properties": {
        "type": { "enum": ["REG_EXP_RELATION_ENTRY"] },
        "path": { "type": "string" },
        "matchers": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [{ "$ref": "#/definitions/regExpRelationMatcher" }]
          }
        }
      }
    },
    "regExpRelationMatcher": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "expression", "relations", "cast"],
      "properties": {
        "type": { "enum": ["REG_EXP_RELATION_MATCHER"] },
        "cast": { "enum": ["NONE", "INTEGER", "STRING", "AUTO"] },
        "expression": { "type": "string" },
        "relations": {
          "type": "array",
          "items": { "type": ["null", "string", "number"] }
        }
      }
    }
  }
}